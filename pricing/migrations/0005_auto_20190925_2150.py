# Generated by Django 2.2.5 on 2019-09-25 20:50

from django.db import migrations
from faker import Faker


class Migration(migrations.Migration):

    dependencies = [
        ('pricing', '0004_auto_20190925_2005'),
    ]

    operations = [
      migrations.RunPython(populate_models),
    ]


def populate_models(apps, schema_editor):
  db_alias = schema_editor.connection.alias

  populate_model(db_alias, "PanelProvider", 3)
  populate_model(db_alias, "TargetGroup", 4)
  populate_model(db_alias, "Country", 3)
  populate_model(db_alias, "LocationGroup", 4)
  populate_model(db_alias, "Location", 20)


def populate_model(db_alias, model_name, record_count=1):
  model = apps.get_model("pricing", model_name)

  for _ in range(record_count):
    model()
    Country.objects.using(db_alias).create(
      Country(name="USA", code="us"),
        Country(name="France", code="fr"),
    ])


  apps.get_model("myapp", "Country")

"""
3 Countries, each with different panel provider
3 Panel Providers
20 Locations of any type (city, region, state, etc.)
4 Location Groups, 3 of them with different provider and 1 would belong to any of them
4 root Target Groups and each root should start a tree which is minimium 3 levels deep (3 of them with different provider and 1 would belong to any of them)
"""
